import React from 'react';
import { Route, Router, Switch, Redirect } from 'react-router-dom';
import { connect } from 'react-redux';
import { setMobileNavVisibility } from '../../reducers/Layout';
import { withRouter } from 'react-router-dom';
import { PublicRoute } from '../../Routes';
import PrivateRoute from '../../Routes/PrivateRoute';
import requireAuth from '../../utils/RequireAuth';
/**
 * Pages
 */
import Login from '../Login';
import Signup from '../Signup';
import Vulnerabilities from '../Vulnerabilities';
import PasswordReset from '../PasswordReset';
import ForgotPassword from '../ForgotPassword';
import UserSettings from '../UserSettings';
import ChangePassword from '../ChangePassword';
import SignupConfirmation from '../SignupConfirmation';
import AccountActivation from '../AccountActivation';
import { BrowserHistory } from '../../helpers';
import Projects from '../Projects';

const Main = ({ mobileNavVisibility, hideMobileMenu, history }) => {
  /*history.listen(() => {
    if (mobileNavVisibility === true) {
      hideMobileMenu();
    }
  });
*/

  return (
    <Router history={BrowserHistory}>
      <div>
        <Switch>
          <Route exact path="/">
            <Redirect to="/vulnerabilities" />
          </Route>
          <PublicRoute path="/login" component={Login} />
          <PublicRoute path="/signup" component={Signup} />
          <PublicRoute path="/passwordreset/:token" component={PasswordReset} />
          <PublicRoute path="/forgotpassword" component={ForgotPassword} />
          <PublicRoute path="/confirmation" component={SignupConfirmation} />
          <PublicRoute
            path="/activation/:token"
            component={AccountActivation}
          />
          <PrivateRoute
            path="/vulnerabilities"
            component={requireAuth(Vulnerabilities)}
          />
          <PrivateRoute path="/projects" component={requireAuth(Projects)} />
          <PrivateRoute
            path="/usersettings"
            component={requireAuth(UserSettings)}
          />
          <PrivateRoute
            path="/changepassword"
            component={requireAuth(ChangePassword)}
          />
        </Switch>
      </div>
    </Router>
  );
};

const mapStateToProp = state => ({
  mobileNavVisibility: state.Layout.mobileNavVisibility,
});

const mapDispatchToProps = (dispatch, ownProps) => ({
  hideMobileMenu: () => dispatch(setMobileNavVisibility(false)),
});

export default withRouter(
  connect(
    mapStateToProp,
    mapDispatchToProps
  )(Main)
);
