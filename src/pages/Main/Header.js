import React from 'react';
import { connect } from 'react-redux';
import { toggleMobileNavVisibility } from '../../reducers/Layout';
import { Navbar, Nav, NavDropdown, MenuItem } from 'react-bootstrap';
import { logout } from '../../actions/authAction';
import PropTypes from 'prop-types';

class Header extends React.Component {

  logout(e) {
    e.preventDefault();
    this.props.logout();
  }

  toggleMobileNavVisibility(e) {
    e.preventDefault();
    this.props.toggleMobileNavVisibility();
  }

  render() {
    let user = this.props.auth.user.toString();

    return (
      <Navbar fluid={true}>
        <Navbar.Header>
          <button
            type="button"
            className="navbar-toggle"
            data-toggle="collapse"
            onClick={this.toggleMobileNavVisibility.bind(this)}
          >
            <span className="sr-only">Toggle navigation</span>
            <span className="icon-bar" />
            <span className="icon-bar" />
            <span className="icon-bar" />
          </button>
        </Navbar.Header>
        <Navbar.Collapse>
          <div className="user-display">{user}</div>
          <Nav pullRight>
            <NavDropdown
              title={<i className="fa fa-user" />}
              id="right-nav-bar"
            >
              <MenuItem eventKey={1} href="/usersettings">
                Account Settings
              </MenuItem>
              <MenuItem eventKey={2} href="/changepassword">
                Change Password
              </MenuItem>
              <MenuItem divider />
              <MenuItem eventKey={3} onClick={this.logout.bind(this)}>
                Sign Out
              </MenuItem>
            </NavDropdown>
          </Nav>
        </Navbar.Collapse>
      </Navbar>
    );
  }
}

Header.propTypes = {
  auth: PropTypes.object.isRequired,
  logout: PropTypes.func.isRequired,
};

function mapStateToProps(state) {
  return {
    auth: state.Auth,
  };
}

function mapDispatchToProp(dispatch) {
  return {
    toggleMobileNavVisibility: () => dispatch(toggleMobileNavVisibility()),
    logout: () => dispatch(logout()),
  };
}

export default connect(
  mapStateToProps,
  mapDispatchToProp
)(Header);
