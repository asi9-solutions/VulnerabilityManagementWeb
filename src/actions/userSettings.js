/**
 * Store user settings in local storage
 * And extract this information from local storage
 * The information is stored in format:
 * {
 *   userId: {
 *       deviceId1: {
 *          fromDate: "Date From 1",
 *          toDate: "Data To 1",
 *          ...
 *       },
 *       deviceId2: {
 *         fromDate: "Date From 2",
 *         toDate: "Date To 2",
 *         ...
 *       }
 *    }
 * };
 */
export function setUserSettings(userId, deviceId, settings) {
  if (userId === undefined || deviceId === undefined || settings === undefined
      || userId === null || deviceId === null || settings === null)
    return;

  let userSettings = getUserSettings(userId);
  let deviceSettings = getDeviceSettings(deviceId, userSettings);

  // Add new settings  
  Object.assign(deviceSettings, settings);
  
  userSettings[deviceId] = deviceSettings;
  localStorage.setItem(userId, JSON.stringify(userSettings));
}

function getUserSettings(userId) {
  if (userId === null || userId === undefined)
    return {};

  const userSettings = JSON.parse(localStorage.getItem(userId));
  return (userSettings === null || userSettings === undefined) 
    ? {} 
    : userSettings;
}

function getDeviceSettings(deviceId, userSettings) {
  let result = null;

  let deviceSettings = Object.entries(userSettings).map(([devId, settingsObj]) => {
    if (devId == deviceId)
      return settingsObj;
    else
      return null;
  }).filter(el => { return el !== null; });

  // After filtering deviceSettings should be array with 0 or 1 element in it
  if (deviceSettings !== null 
    && deviceSettings !== undefined
    && deviceSettings.length > 0
  )
    result = deviceSettings[0];

  return (result === null 
      || result === undefined 
      || (Object.keys(result).length === 0 && result.constructor === Object)
    ) 
    ? {} 
    : result;
}

function getUserDeviceSettings(userId, deviceId) {
  let userSettings = getUserSettings(userId);

  let deviceSettings = getDeviceSettings(deviceId, userSettings);

  return deviceSettings;
}

export function getUserSettingsValue(userId, deviceId, settingsKey) {
  let value = null;

  if (userId === null || userId === undefined
    || deviceId === null || deviceId === undefined
    || settingsKey === null || settingsKey === undefined)
    return null;

  const settings = getUserDeviceSettings(userId, deviceId);
  if (Object.keys(settings).length > 0 && settings.constructor === Object) {
    if (settings.hasOwnProperty(settingsKey))
      value = settings[settingsKey];
  }

  return value;
}
